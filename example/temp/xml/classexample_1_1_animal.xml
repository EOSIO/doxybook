<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classexample_1_1_animal" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>example::Animal</compoundname>
    <derivedcompoundref refid="classexample_1_1_bird" prot="public" virt="non-virtual">example::Bird</derivedcompoundref>
    <includes refid="animal_8h" local="no">animal.h</includes>
    <innerclass refid="structexample_1_1_animal_1_1_result" prot="public">example::Animal::Result</innerclass>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="classexample_1_1_animal_1adc9e490a8ea5390fbcaf6ffa24c3ec69" prot="public" static="no">
        <name>Type</name>
        <enumvalue id="classexample_1_1_animal_1adc9e490a8ea5390fbcaf6ffa24c3ec69a6e5479b6b33bfb1d1ddcadee8c18bf5d" prot="public">
          <name>NONE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classexample_1_1_animal_1adc9e490a8ea5390fbcaf6ffa24c3ec69a4be27b9504bb7b14709c0315ea0b4ca3" prot="public">
          <name>INSECT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classexample_1_1_animal_1adc9e490a8ea5390fbcaf6ffa24c3ec69a79d1b3d3c02b6b09d6abf608cf9045f6" prot="public">
          <name>AMPHIBIAN</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classexample_1_1_animal_1adc9e490a8ea5390fbcaf6ffa24c3ec69a6205637d5a9711b5bece4f961915bf59" prot="public">
          <name>BIRD</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classexample_1_1_animal_1adc9e490a8ea5390fbcaf6ffa24c3ec69a0c9b7474bcd06a73ad5c1ae3b0b05bb8" prot="public">
          <name>FISH</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classexample_1_1_animal_1adc9e490a8ea5390fbcaf6ffa24c3ec69a954a217544b4717d06254df10b3e4c34" prot="public">
          <name>REPTILE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classexample_1_1_animal_1adc9e490a8ea5390fbcaf6ffa24c3ec69aa4d73065e1a5df2bd56d98ea430f3e68" prot="public">
          <name>MAMMAL</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>The 6 classes of animal kingdom. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/animal.h" line="17" column="1" bodyfile="src/animal.h" bodystart="17" bodyend="25"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classexample_1_1_animal_1a77ebfd8268da42527748bc17f458c02c" prot="protected" static="no" mutable="no">
        <type><ref refid="classexample_1_1_animal" kindref="compound">Animal</ref> *</type>
        <definition>Animal* example::Animal::mother</definition>
        <argsstring></argsstring>
        <name>mother</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/animal.h" line="77" column="1" bodyfile="src/animal.h" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classexample_1_1_animal_1aeaabef8bc7cd869f09db725e0fcc5092" prot="protected" static="no" mutable="no">
        <type><ref refid="classexample_1_1_animal" kindref="compound">Animal</ref> *</type>
        <definition>Animal* example::Animal::father</definition>
        <argsstring></argsstring>
        <name>father</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/animal.h" line="78" column="1" bodyfile="src/animal.h" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classexample_1_1_animal_1a9362efc813ef23964f7f6f57640a12e7" prot="protected" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string example::Animal::name</definition>
        <argsstring></argsstring>
        <name>name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/animal.h" line="79" column="1" bodyfile="src/animal.h" bodystart="79" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classexample_1_1_animal_1a7ff2cbf990657553d95f6d15fb0f4568" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classexample_1_1_animal" kindref="compound">Animal</ref> *</type>
        <definition>static Animal* example::Animal::find_parent_by_name</definition>
        <argsstring>(Animal *child)</argsstring>
        <name>find_parent_by_name</name>
        <param>
          <type><ref refid="classexample_1_1_animal" kindref="compound">Animal</ref> *</type>
          <declname>child</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/animal.h" line="34" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classexample_1_1_animal_1a1d509e63586d5fe3edc86d393f88910b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classexample_1_1_animal" kindref="compound">Animal</ref> *</type>
        <definition>static Animal* example::Animal::find_child_by_name</definition>
        <argsstring>(Animal *parent)</argsstring>
        <name>find_child_by_name</name>
        <param>
          <type><ref refid="classexample_1_1_animal" kindref="compound">Animal</ref> *</type>
          <declname>parent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/animal.h" line="35" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classexample_1_1_animal_1acef1db6802de001a01c403afeca90c86" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>example::Animal::Animal</definition>
        <argsstring>(Type type, const std::string &amp;name, Animal *mother=nullptr, Animal *father=nullptr)</argsstring>
        <name>Animal</name>
        <param>
          <type><ref refid="classexample_1_1_animal_1adc9e490a8ea5390fbcaf6ffa24c3ec69" kindref="member">Type</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="classexample_1_1_animal" kindref="compound">Animal</ref> *</type>
          <declname>mother</declname>
          <defval>nullptr</defval>
        </param>
        <param>
          <type><ref refid="classexample_1_1_animal" kindref="compound">Animal</ref> *</type>
          <declname>father</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/animal.h" line="37" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classexample_1_1_animal_1a612d7d2e9631e6f241e871b3785f4cdf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>example::Animal::Animal</definition>
        <argsstring>(const Animal &amp;other)=delete</argsstring>
        <name>Animal</name>
        <param>
          <type>const <ref refid="classexample_1_1_animal" kindref="compound">Animal</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/animal.h" line="38" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classexample_1_1_animal_1a29db85a24acf4fd5fb353c871eb086ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>example::Animal::Animal</definition>
        <argsstring>(Animal &amp;&amp;animal) noexcept</argsstring>
        <name>Animal</name>
        <param>
          <type><ref refid="classexample_1_1_animal" kindref="compound">Animal</ref> &amp;&amp;</type>
          <declname>animal</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/animal.h" line="39" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classexample_1_1_animal_1a3f655bd72ea96eba32d8332a1b44e70b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>example::Animal::~Animal</definition>
        <argsstring>()=default</argsstring>
        <name>~Animal</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/animal.h" line="40" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classexample_1_1_animal_1affec460d5bc2fb8d650fcf5b7b8cf396" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void example::Animal::swap</definition>
        <argsstring>(Animal &amp;other) noexcept</argsstring>
        <name>swap</name>
        <param>
          <type><ref refid="classexample_1_1_animal" kindref="compound">Animal</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/animal.h" line="42" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classexample_1_1_animal_1ad6aee00ea8d457d2bd7becbe107f2d9a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int example::Animal::get_num_of_limbs</definition>
        <argsstring>() const </argsstring>
        <name>get_num_of_limbs</name>
        <briefdescription>
<para>Returns the number of limbs. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classexample_1_1_animal_1a7558cb43e67bc800961b451dd546db74" kindref="member">get_num_of_eyes</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/animal.h" line="48" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classexample_1_1_animal_1a7558cb43e67bc800961b451dd546db74" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int example::Animal::get_num_of_eyes</definition>
        <argsstring>() const </argsstring>
        <name>get_num_of_eyes</name>
        <briefdescription>
<para>Returns the number of eyes. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classexample_1_1_animal_1ad6aee00ea8d457d2bd7becbe107f2d9a" kindref="member">get_num_of_limbs</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/animal.h" line="54" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classexample_1_1_animal_1a71d036f82dfe3e7dbefb334a92f91275" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool example::Animal::has_tail</definition>
        <argsstring>() const </argsstring>
        <name>has_tail</name>
        <briefdescription>
<para>Returns true if the animal has a tail. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classexample_1_1_animal_1ad6aee00ea8d457d2bd7becbe107f2d9a" kindref="member">get_num_of_limbs</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/animal.h" line="60" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classexample_1_1_animal_1aaee0d759d18beaca18670d2a794b1445" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void example::Animal::move</definition>
        <argsstring>()</argsstring>
        <name>move</name>
        <reimplementedby refid="classexample_1_1_bird_1aa3877f1e70aba0d25ef757c248f69d13">move</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/animal.h" line="62" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classexample_1_1_animal_1a6939f9fed1a387b128d3947afc239873" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void example::Animal::make_sound</definition>
        <argsstring>()=0</argsstring>
        <name>make_sound</name>
        <reimplementedby refid="classexample_1_1_bird_1ae61379b32b53508e9a2398305826667a">make_sound</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/animal.h" line="63" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classexample_1_1_animal_1ab985ec14c22d9f3b80c1a4a911300062" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::pair&lt; <ref refid="classexample_1_1_animal" kindref="compound">Animal</ref> *, <ref refid="classexample_1_1_animal" kindref="compound">Animal</ref> * &gt;</type>
        <definition>std::pair&lt;Animal*, Animal*&gt; example::Animal::get_parents</definition>
        <argsstring>() const </argsstring>
        <name>get_parents</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/animal.h" line="65" column="1" bodyfile="src/animal.h" bodystart="65" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="classexample_1_1_animal_1ab4e7a34b9637acc89c55eec9405f1f6e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::string &amp;</type>
        <definition>const std::string&amp; example::Animal::get_name</definition>
        <argsstring>() const </argsstring>
        <name>get_name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/animal.h" line="69" column="1" bodyfile="src/animal.h" bodystart="69" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="classexample_1_1_animal_1a021864d5b75ff00550cd4ffe65f4014d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classexample_1_1_animal" kindref="compound">Animal</ref> &amp;</type>
        <definition>Animal&amp; example::Animal::operator=</definition>
        <argsstring>(const Animal &amp;other)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classexample_1_1_animal" kindref="compound">Animal</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/animal.h" line="73" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classexample_1_1_animal_1a055b1b5d5ffaa302068e7000b1b9f4f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classexample_1_1_animal" kindref="compound">Animal</ref> &amp;</type>
        <definition>Animal&amp; example::Animal::operator=</definition>
        <argsstring>(Animal &amp;&amp;other) noexcept</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classexample_1_1_animal" kindref="compound">Animal</ref> &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/animal.h" line="74" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Base class for all animals from which <ref refid="classexample_1_1_bird" kindref="compound">Bird</ref> derives. </para>    </briefdescription>
    <detaileddescription>
<para>Lorem Ipsum Donor. Some <ulink url="http://github.com">Random link with <bold>bold</bold> and <emphasis>italics</emphasis></ulink> <simplesect kind="see"><para><ref refid="classexample_1_1_bird" kindref="compound">Bird</ref> </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>example::Bird</label>
        <link refid="classexample_1_1_bird"/>
        <childnode refid="0" relation="public-inheritance">
        </childnode>
      </node>
      <node id="0">
        <label>example::Animal</label>
        <link refid="classexample_1_1_animal"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>example::Animal</label>
        <link refid="classexample_1_1_animal"/>
        <childnode refid="2" relation="usage">
          <edgelabel>mother</edgelabel>
          <edgelabel>father</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="src/animal.h" line="12" column="1" bodyfile="src/animal.h" bodystart="12" bodyend="80"/>
    <listofallmembers>
      <member refid="classexample_1_1_animal_1adc9e490a8ea5390fbcaf6ffa24c3ec69a79d1b3d3c02b6b09d6abf608cf9045f6" prot="public" virt="non-virtual"><scope>example::Animal</scope><name>AMPHIBIAN</name></member>
      <member refid="classexample_1_1_animal_1acef1db6802de001a01c403afeca90c86" prot="public" virt="non-virtual"><scope>example::Animal</scope><name>Animal</name></member>
      <member refid="classexample_1_1_animal_1a612d7d2e9631e6f241e871b3785f4cdf" prot="public" virt="non-virtual"><scope>example::Animal</scope><name>Animal</name></member>
      <member refid="classexample_1_1_animal_1a29db85a24acf4fd5fb353c871eb086ed" prot="public" virt="non-virtual"><scope>example::Animal</scope><name>Animal</name></member>
      <member refid="classexample_1_1_animal_1adc9e490a8ea5390fbcaf6ffa24c3ec69a6205637d5a9711b5bece4f961915bf59" prot="public" virt="non-virtual"><scope>example::Animal</scope><name>BIRD</name></member>
      <member refid="classexample_1_1_animal_1aeaabef8bc7cd869f09db725e0fcc5092" prot="protected" virt="non-virtual"><scope>example::Animal</scope><name>father</name></member>
      <member refid="classexample_1_1_animal_1a1d509e63586d5fe3edc86d393f88910b" prot="public" virt="non-virtual"><scope>example::Animal</scope><name>find_child_by_name</name></member>
      <member refid="classexample_1_1_animal_1a7ff2cbf990657553d95f6d15fb0f4568" prot="public" virt="non-virtual"><scope>example::Animal</scope><name>find_parent_by_name</name></member>
      <member refid="classexample_1_1_animal_1adc9e490a8ea5390fbcaf6ffa24c3ec69a0c9b7474bcd06a73ad5c1ae3b0b05bb8" prot="public" virt="non-virtual"><scope>example::Animal</scope><name>FISH</name></member>
      <member refid="classexample_1_1_animal_1ab4e7a34b9637acc89c55eec9405f1f6e" prot="public" virt="non-virtual"><scope>example::Animal</scope><name>get_name</name></member>
      <member refid="classexample_1_1_animal_1a7558cb43e67bc800961b451dd546db74" prot="public" virt="non-virtual"><scope>example::Animal</scope><name>get_num_of_eyes</name></member>
      <member refid="classexample_1_1_animal_1ad6aee00ea8d457d2bd7becbe107f2d9a" prot="public" virt="non-virtual"><scope>example::Animal</scope><name>get_num_of_limbs</name></member>
      <member refid="classexample_1_1_animal_1ab985ec14c22d9f3b80c1a4a911300062" prot="public" virt="non-virtual"><scope>example::Animal</scope><name>get_parents</name></member>
      <member refid="classexample_1_1_animal_1a71d036f82dfe3e7dbefb334a92f91275" prot="public" virt="non-virtual"><scope>example::Animal</scope><name>has_tail</name></member>
      <member refid="classexample_1_1_animal_1adc9e490a8ea5390fbcaf6ffa24c3ec69a4be27b9504bb7b14709c0315ea0b4ca3" prot="public" virt="non-virtual"><scope>example::Animal</scope><name>INSECT</name></member>
      <member refid="classexample_1_1_animal_1a6939f9fed1a387b128d3947afc239873" prot="public" virt="pure-virtual"><scope>example::Animal</scope><name>make_sound</name></member>
      <member refid="classexample_1_1_animal_1adc9e490a8ea5390fbcaf6ffa24c3ec69aa4d73065e1a5df2bd56d98ea430f3e68" prot="public" virt="non-virtual"><scope>example::Animal</scope><name>MAMMAL</name></member>
      <member refid="classexample_1_1_animal_1a77ebfd8268da42527748bc17f458c02c" prot="protected" virt="non-virtual"><scope>example::Animal</scope><name>mother</name></member>
      <member refid="classexample_1_1_animal_1aaee0d759d18beaca18670d2a794b1445" prot="public" virt="virtual"><scope>example::Animal</scope><name>move</name></member>
      <member refid="classexample_1_1_animal_1a9362efc813ef23964f7f6f57640a12e7" prot="protected" virt="non-virtual"><scope>example::Animal</scope><name>name</name></member>
      <member refid="classexample_1_1_animal_1adc9e490a8ea5390fbcaf6ffa24c3ec69a6e5479b6b33bfb1d1ddcadee8c18bf5d" prot="public" virt="non-virtual"><scope>example::Animal</scope><name>NONE</name></member>
      <member refid="classexample_1_1_animal_1a021864d5b75ff00550cd4ffe65f4014d" prot="public" virt="non-virtual"><scope>example::Animal</scope><name>operator=</name></member>
      <member refid="classexample_1_1_animal_1a055b1b5d5ffaa302068e7000b1b9f4f7" prot="public" virt="non-virtual"><scope>example::Animal</scope><name>operator=</name></member>
      <member refid="classexample_1_1_animal_1adc9e490a8ea5390fbcaf6ffa24c3ec69a954a217544b4717d06254df10b3e4c34" prot="public" virt="non-virtual"><scope>example::Animal</scope><name>REPTILE</name></member>
      <member refid="classexample_1_1_animal_1affec460d5bc2fb8d650fcf5b7b8cf396" prot="public" virt="non-virtual"><scope>example::Animal</scope><name>swap</name></member>
      <member refid="classexample_1_1_animal_1adc9e490a8ea5390fbcaf6ffa24c3ec69" prot="public" virt="non-virtual"><scope>example::Animal</scope><name>Type</name></member>
      <member refid="classexample_1_1_animal_1a3f655bd72ea96eba32d8332a1b44e70b" prot="public" virt="non-virtual"><scope>example::Animal</scope><name>~Animal</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
